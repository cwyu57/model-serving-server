[project]
name = "model-serving-server"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "alembic>=1.17.0",
    "asyncpg>=0.30.0",
    "fastapi>=0.119.0",
    "psycopg[binary,pool]>=3.2.11",
    "sqlalchemy[mypy]>=2.0.44",
    "torch>=2.9.0",
    "torchvision>=0.24.0",
    "uvicorn>=0.38.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "pre-commit>=4.0.0",
    "sqlacodegen>=3.0.0",
]

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "D104",  # Missing docstring in public package
    "F401",  # Unused import (allow re-exports without __all__)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py files for re-exports

[tool.ruff.lint.isort]
known-first-party = ["app"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_equality = true
plugins = ["sqlalchemy.ext.mypy.plugin"]
